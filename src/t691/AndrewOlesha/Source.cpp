#include <iostream>
#include<ctime>
#include<windows.h>
#include<thread>
#include<conio.h>
using namespace std;
class Pet
{
protected:
	string name;
	int health;
	int hunger;
	int mood; //настроение
	int fatigue; //усталость
public:
	Pet()
	{
		health = hunger = mood = 50;
		fatigue = 100;
	}
	Pet(string _name, int _health, int _hunger, int _mood)
	{
		name = _name;
		health = _health;
		hunger = _hunger;
		mood = _mood;
	}
	void death()
	{
		cout << "##################################################################################################################################" << endl;
		cout << "##################################################################################################################################" << endl;
		cout << "##################################################################################################################################" << endl;
		cout << "##################################################################################################################################" << endl;
		cout << "##################################################################################################################################" << endl;
		cout << "#########################################################################@%%@%@%@@====%@@#########################################" << endl;
		cout << "################################################################%%===++*+++=%%%%%@%@###@@@%@@%%@@@################################" << endl;
		cout << "###########################################################@@@@@@@@@@=+*++====%%=*:+@=%%%%===%%%@@@@##############################" << endl;
		cout << "#########################################################@@#@@@%@=:%%@=+==%%==+=====+++++=====%%%@@@@###@%%@######################" << endl;
		cout << "###########################################################@%%%%===%@%%========++++++++++++++==%%%@@@@@@#@@@@@@###################" << endl;
		cout << "####################@#@#@@@@@############################@@@%%%%===%@%=======++**************++==%@@@@@@@@@@@@####################" << endl;
		cout << "##########@@@@@@%%%=%%%%%%==%=++==%@@@@##################@@%%%%%===%@%=====%%=+**************++==%%%@@@@@@%%@#####################" << endl;
		cout << "#########@@@%%%%========+==%==++=%%+=%%%@@#%@############@%%%%%==+++%%==+++==%%%=*******:****+===%%%%@@@@#@#######################" << endl;
		cout << "#########@@%%%====+++++==%%%==++=%%=*+++==%%@@@@##########@%%====++=@%%=+==%%===+***********+======%%%@@@#########################" << endl;
		cout << "########@@@%%====++++++=%%%%====%%@%=+++====%%%@@###########%%===++===%%%==++++++++***+++++++======%%%@@@@########################" << endl;
		cout << "########@@@%%=====+++%@@@%=====%%@@=++*++=====%@@############@%=====%%%%===%=======++++++**+========%%@%@@########################" << endl;
		cout << "#######@%@%%%%=======%@%=%%%=++=%%@%+**++++==%%@#@#############@%%%@@@@@@@@%===%@@@@%%==++++========%%%%%@########################" << endl;
		cout << "#######@%@%@%=======%%=%%==%%%%%%%%=+=+*+++==%@##################@%%@##@@@@@@@%+=%%======++=======%=%%%@##########################" << endl;
		cout << "#######@@@@%%%%%%%%%%%%=========%%====+==++%%@@###################@%%@@##@@@@@%%%==++++=+=========%%%@############################" << endl;
		cout << "#########@@%%%%%%@@@=%%@%@#@@@@@%%%%%==+===%%@######################@@@@%%%===+++***++++=======%%%@###############################" << endl;
		cout << "##########@@%%%%=%@@@@@==%=++=%%@@@%%====%%%##########################@@%%%==+++++****++==%%%%%@##################################" << endl;
		cout << "###########@@%%%%=%%@@@%%%%@%@@@%%=====%@@##############################@@%%=======++===%%@@@#####################################" << endl;
		cout << "############@@%%%======%%%%%%%=%%%%==%@#@##################################@%%%%%%%%@@@@@#########################################" << endl;
		cout << "##############@%%====++++======%%==%@#@@##########################################################################################" << endl;
		cout << "################@%======++=====%%@#@@%@###########################################################################################" << endl;
		cout << "####################@@%%=%%%%@@@@==@##############################################################################################" << endl;
		cout << "##################################################################################################################################" << endl;
		cout << "##################################################################################################################################" << endl;
		cout << "######*-----.@+.......:###%......@#:........**...:#########=........:%...-######@....@####@.........:##=.....-##+...*#:--*########" << endl;
		cout << "#####@:...---#*....==%%###:......+#*--....-.=:...:#########=--......:=....@#####@....@####@....-....:#....=:...*#....+...@########" << endl;
		cout << "#####@:-..=@@#*....--:+%##...--..-@##%....@##:....---*@#######....=##=....---:%#%....@####@....@-...:@....%*...-#%......+####@####" << endl;
		cout << "#####%:-.....#*...-%....%=...**...%##%....@@#:...-=....%######....=##=....%....*%....@####@....@-...:@....%:...-#@......*####@@###" << endl;
		cout << "#####%:-..=###*...-#....%:........:##%....@##:...:@....%######....=##=....@-...:+....@####%....@-...:@....%:...:#-...:...=###@####" << endl;
		cout << "#####@*---...=*.........@....%#....@#%....@##:.........@######....=##=.........+@....@###*.....@-...:#:........=%...-@-.-:%##@@###" << endl;
		cout << "######@%%%@@##########################################################@##@@@@#############@#######@######%%%@##########@@@@#@@####" << endl;
		cout << "##################################################################################################################################" << endl;
		cout << "##################################################################################################################################" << endl;
		

	}
	void feed()
	{
		if (hunger<100)
		{
			hunger++;
		}
	}
	void play()
	{
		if (mood<100)
		{
			mood++;
		}
	}
	void heal()
	{
		if (health<100)
		{
			health++;
		}
	}
	void sleep()
	{
		if (fatigue<100)
		{
			fatigue += 5;
		}
		if (fatigue>100)
		{
			fatigue = 100;
		}
	}
	void test()
	{
		if (hunger <= 0)
		{
			death();
			system("pause");
			exit(0);
		}
		if (fatigue <= 0)
		{
			death();
			system("pause");
			exit(0);
		}
		if (health <= 0)
		{
			death();
			system("pause");
			exit(0);
		}
		if (mood <= 0)
		{
			death();
			system("pause");
			exit(0);
		}
	}

	void life_cycle()
	{
		if (name == "Кот")
		{
			hunger--;
			mood--;
			fatigue -= 3;
			health--;
		}

		if (name == "Собака")
		{
			hunger--;
			mood-=3;
			fatigue --;
			health--;
		}

		if (name == "Попугай")
		{
			hunger-=3;
			mood--;
			fatigue -= 3;
			health-=2;
		}

	}
	void setname(string _name)
	{
		name = _name;
	}
	void info()
	{
		cout << "Голод - " << hunger <<endl;
		cout << "Грусть - " << mood <<endl;
		cout << "Усталость - " << fatigue <<endl;
		cout << "Здоровье - " << health  <<endl;
	}
};

Pet MyPet;


void SecondThread()
{
	char temp=0;
	for (;;)
	{
		temp = _getch();
		if (temp == 'z')
		{
			MyPet.feed();
		}
		if (temp == 'x')
		{
			MyPet.heal();
		}
		if (temp == 'c')
		{
			MyPet.play();
		}
		if (temp == 'z')
		{
			MyPet.sleep();
		}
		Sleep(2000);
		MyPet.life_cycle();
		MyPet.test();
		
	}
}
void ThirdThread()
{
	char temp;
	for (;;)
	{
		temp = _getch();
		if (temp == 'z')
		{
			MyPet.feed();
		}
		if (temp == 'x')
		{
			MyPet.heal();
		}
		if (temp == 'c')
		{
			MyPet.play();
		}
		if (temp == 'z')
		{
			MyPet.sleep();
		}
		if (temp == 'd')
		{
			MyPet.death();
		}
	}
}
int main()
{
	setlocale(LC_ALL, "rus");
	int choice;
	
repeat:
	cout << "Выберите своего питомца:" << endl;
	cout << "1.Кот" << endl;
	cout << "2.Собака" << endl;
	cout << "3.Попугай" << endl;
	cin >> choice;
	switch (choice)
	{
	case 1:
	{
		MyPet.setname("Кот");
		break;
	}
	case 2:
	{
		MyPet.setname("Собака");
		break;
	}
	case 3:
	{
		MyPet.setname("Попугай");
		break;
	}
	default:
	{

		system("cls");
		cout << "Введите коректные данные" << endl;
		goto repeat;
	}
	}
	system("cls");
	thread MyThred(SecondThread);
	thread My3Tread(ThirdThread);
	for (;;)
	{
		MyPet.info();
		system("cls");
	}

	

	return 0;
}
